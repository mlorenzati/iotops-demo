name: "Deploy Infrastructure"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "iotops-demo"

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.event.inputs.environment }} # Dynamically set the environment based on input

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: "Check out repository code"
        uses: actions/checkout@v2

      - name: "Set up Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Authentication for Terraform
        run: |
          echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV

      - name: "Initialize Terraform"
        run: terraform init --upgrade

      - name: "Terraform Plan"
        run: terraform plan -out=tfplan
        continue-on-error: true # If planning fails, continue to the next step for potential cleanup or reporting

      - name: "Terraform Apply"
        if: ${{ success() }} # Apply only if the 'plan' step was successful
        run: terraform apply -auto-approve tfplan

      - name: "Cleanup: Azure Logout" # Making it clear this is a cleanup step
        if: always() # Always run this step to logout, even if a previous step fails
        run: az logout
